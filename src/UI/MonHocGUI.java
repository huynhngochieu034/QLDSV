/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.MonHocDAO;
import core.MonHoc;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Pro
 */
public class MonHocGUI extends javax.swing.JDialog {

    /**
     * Creates new form MonHocGUI
     */
    private MonHocDAO monHocDAO;
    public static String statusMH = "";
    public static Stack<MonHoc> stackMH = null;
    public static Stack<String> stringMH = null;

    public MonHocGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            initComponents();

            setColor();
            stackMH = new Stack<MonHoc>();
            stringMH = new Stack<String>();
            danhSachMonHoc();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }

    public void setColor() {
        this.getContentPane().setBackground(Color.orange);
        this.btnThem.setBackground(Color.GREEN);
        this.btnSua.setBackground(Color.magenta);
        this.btnXoa.setBackground(Color.red);
        this.jButton4.setBackground(Color.yellow);
        this.btnThoat.setBackground(Color.red);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMH = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Button-Add-icon.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit-validated-icon.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Button-Close-icon.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/redo-icon.png"))); // NOI18N
        jButton4.setText("Phục Hồi");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("DANH SÁCH MÔN HỌC");

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Button-exit-icon.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jTableMH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableMH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addComponent(jLabel3)
                .addGap(278, 291, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnThem)
                .addGap(36, 36, 36)
                .addComponent(btnSua)
                .addGap(26, 26, 26)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnThoat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(btnThoat))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            // TODO add your handling code here:
            statusMH = "Them";
            MonHocUPDATE add = new MonHocUPDATE(this, monHocDAO);
            add.setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            // TODO add your handling code here:
            statusMH = "CapNhat";
            capNhatMonHoc();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        xoaMH();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (stringMH.isEmpty() && stackMH.isEmpty()) {
            return;
        } else {
            String check = stringMH.pop();
            if (check.equals("Them")) {
                try {
                    int response = JOptionPane.showConfirmDialog(
                            this, "Bạn có muốn xóa môn học vừa thêm không?", "Confirm",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                    if (response != JOptionPane.YES_OPTION) {
                        return;
                    }
                    // get the current student
                    MonHoc tempMH = stackMH.pop();
                    // delete the student
                    monHocDAO.xoaMonPROC(tempMH.getMAMH());
                    // refrprocessesh GUI
                    danhSachMonHoc();
                } catch (SQLException ex) {
                    JOptionPane.showConfirmDialog(rootPane, ex.getMessage());
                }
            } else if (check.equals("CapNhat")) {
                try {
                    MonHoc tempMH = stackMH.pop();
                    // delete the student
                    monHocDAO.capNhatMonPROC(tempMH);
                    // refrprocessesh GUI
                    danhSachMonHoc();
                } catch (SQLException ex) {
                    Logger.getLogger(LopGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (check.equals("Xoa")) {
                try {
                    MonHoc tempMH = stackMH.pop();
                    // delete the student
                    monHocDAO.themMonPROC(tempMH);
                    // refrprocessesh GUI
                    danhSachMonHoc();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);
                }
            }

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonHocGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonHocGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonHocGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonHocGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MonHocGUI dialog = new MonHocGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void danhSachMonHoc() throws SQLException {
        monHocDAO = new MonHocDAO();
        ArrayList<MonHoc> dsMH = null;
        dsMH = monHocDAO.findAll();
        MonHocTableModel model = new MonHocTableModel(dsMH);
        jTableMH.setModel(model);

    }

    public void capNhatMonHoc() throws SQLException {

        // get the selected item
        int row = jTableMH.getSelectedRow();

        // make sure a row is selected
        if (row < 0) {
            JOptionPane.showMessageDialog(rootPane, "Bạn phải chọn môn học");
            return;
        }

        // get the current student
        MonHoc tempMH = (MonHoc) jTableMH.getValueAt(row, MonHocTableModel.OBJECT_COL);

        // create dialog
        MonHocUPDATE dialog = new MonHocUPDATE(this, monHocDAO, tempMH, true);
        // show dialog
        dialog.setVisible(true);
    }

    public void xoaMH() {

        try {
            // get the selected row
            int row = jTableMH.getSelectedRow();

            // make sure a row is selected
            if (row < 0) {
                JOptionPane.showMessageDialog(this,
                        "Bạn phải chọn môn học", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // prompt the user
            int response = JOptionPane.showConfirmDialog(
                    this, "Bạn có muốn xóa môn học này không?", "Confirm",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (response != JOptionPane.YES_OPTION) {
                return;
            }

            // get the current student
            MonHoc tempMH = (MonHoc) jTableMH.getValueAt(row, MonHocTableModel.OBJECT_COL);

            // delete the student
            monHocDAO.xoaMonPROC(tempMH.getMAMH());
            stringMH.push("Xoa");
            stackMH.push(tempMH);
            // refrprocessesh GUI
            danhSachMonHoc();

            // show success message
            JOptionPane.showMessageDialog(this,
                    "Xóa môn học thành công.", "Deleted",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this,
                    "Lỗi xóa môn học: " + exc.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMH;
    // End of variables declaration//GEN-END:variables
}
